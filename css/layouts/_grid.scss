@function decimal-round ($number, $digits: 0, $mode: round) {
	$n: 1;
	// $number must be a number
	@if type-of($number) != number {
		@warn '#{ $number } is not a number.';
		@return $number;
	}
	// $digits must be a unitless number
	@if type-of($digits) != number {
		@warn '#{ $digits } is not a number.';
		@return $number;
	} @else if not unitless($digits) {
		@warn '#{ $digits } has a unit.';
		@return $number;
	}
	@for $i from 1 through $digits {
		$n: $n * 10;
	}
	@if $mode == round {
		@return round($number * $n) / $n;
	} @else if $mode == ceil {
		@return ceil($number * $n) / $n;
	} @else if $mode == floor {
		@return floor($number * $n) / $n;
	} @else {
		@warn '#{ $mode } is undefined keyword.';
		@return $number;
	}
}

@function decimal-ceil ($number, $digits: 0) {
	@return decimal-round($number, $digits, ceil);
}

@function decimal-floor ($number, $digits: 0) {
	@return decimal-round($number, $digits, floor);
}



$baseFS: 16px;  // <-- Change this if needed

// Change the gutter values based on grid designs
$gutterBase: 1.6%;
$gutterNone: 0%;
$gutterLarge: 7%;

.grid-row {
	clear: both;
	padding: 0;
	margin: 0;
	zoom: 1;
	font-size: 0;
	zoom:1; /* For IE 6/7 */

	&:before,
	&:after { content:""; display:table; }
	&:after { clear:both;}
}

.col {
	font-size: $baseFS;
	display: inline-block;
	padding: 0;
	margin: 0;

	&:first-child {
		margin: 0;
	}
}

// For responsive re-structuring, refer to: http://www.responsivegridsystem.com/going-further/


.gutter {
	$gutter: $gutterBase;

	@for $cols from 2 through 12 {
		$span: $cols;
		@while $span > 0 {
			@if ($span == $cols) {
				.span_#{$span}_of_#{$cols} { width: 100%; }
			} @else {
				.span_#{$span}_of_#{$cols} { width: decimal-round( (((100 - ($gutter * ($cols - 1))) / $cols) * $span) + (($span - 1) * $gutter) , 2, 'floor'); }
			}
			$span: $span - 1;
		}
	}

	.col {
		margin-left: $gutter;
	}
}

.gutter--none {
	$gutter: $gutterNone;

	@for $cols from 2 through 12 {
		$span: $cols;
		@while $span > 0 {
			@if ($span == $cols) {
				.span_#{$span}_of_#{$cols} { width: 100%; }
			} @else {
				.span_#{$span}_of_#{$cols} { width: decimal-round((100 / $cols), 2, 'floor') * 1%; }
			}
			$span: $span - 1;
		}
	}

	.col {
		margin-left: 0;
	}
}

.gutter--l {
	$gutter: $gutterLarge;

	@for $cols from 2 through 12 {
		$span: $cols;
		@while $span > 0 {
			@if ($span == $cols) {
				.span_#{$span}_of_#{$cols} { width: 100%; }
			} @else {
				.span_#{$span}_of_#{$cols} { width: decimal-round( (((100 - ($gutter * ($cols - 1))) / $cols) * $span) + (($span - 1) * $gutter) , 2, 'floor'); }
			}
			$span: $span - 1;
		}
	}

	.col {
		margin-left: $gutter;
	}
}
